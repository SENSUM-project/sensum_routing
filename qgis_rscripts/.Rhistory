db_tbl_streets=string cologne_streets
db_host<-"localhost"
db_tbl_streets<-"cologne_streets"
library(RPostgreSQL)
library(RPostgreSQL)
##SENSUM=group
db_host<-"localhost"
db_user<-"string postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_streets<-"cologne_streets"
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route network from streets table
#TODO: CHECK RESULTS! - seems not yet working properly when executed from qgis
sql <- paste("SELECT * FROM pgr_createnetwork(' ", db_schema, ".", db_tbl_streets, " ');")
post <- dbGetQuery(con, statement = sql)
sql
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"string postgres"
db_pw<-"postgres"
db_name<-sensum_demo
db_schema<-"routing"
db_tbl_streets<-"cologne_streets"
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route network from streets table
#TODO: CHECK RESULTS! - seems not yet working properly when executed from qgis
sql <- paste("SELECT * FROM pgr_createnetwork(' ", db_schema, ".", db_tbl_streets, " ');")
post <- dbGetQuery(con, statement = sql)
sql
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_streets<-"cologne_streets"
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
sql <- paste("SELECT * FROM pgr_createnetwork(' ", db_schema, ".", db_tbl_streets, " ');")
post <- dbGetQuery(con, statement = sql)
sql
sql <- paste("SELECT * FROM pgr_createnetwork(' ",db_schema,".",db_tbl_streets," ');")
post <- dbGetQuery(con, statement = sql)
sql
sql <- paste("SELECT * FROM pgr_createnetwork(' ",db_schema,".",db_tbl_streets," ');")
sql
sql <- paste0("SELECT * FROM pgr_createnetwork(' ",db_schema,".",db_tbl_streets," ');")
sql
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT * FROM pgr_createnetwork('",db_schema,".",db_tbl_streets,"');")
db_pw<-"postgres"
sql
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"test"
db_tbl_streets<-"cologne_streets"
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route network from streets table
sql <- paste0("SELECT * FROM pgr_createnetwork('",db_schema,".",db_tbl_streets,"');")
post <- dbGetQuery(con, statement = sql)
sql
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_street_vertices<-"cologne_streets_vertices_pgr"
db_tbl_samppts<-"samp_pts"
stops_count<-20
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
sql <- paste("SELECT * FROM pgr_createroutestops(' ", db_schema, ".", db_tbl_street_vertices, " ', ' ", db_schema, ".", db_tbl_samppts, " ',", stops_count,");")
sql
sql <- paste0("SELECT * FROM pgr_createroutestops('",db_schema,".",db_tbl_street_vertices,"','",db_schema,".",db_tbl_samppts,"',",stops_count,");")
sql
post <- dbGetQuery(con, statement = sql)
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-0
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
sql <- paste("DROP TABLE IF EXISTS ", db_schema,".route_stops_tsp;")
sql
sql <- paste("DROP TABLE IF EXISTS",db_schema,".route_stops_tsp;")
sql
sql <- paste0("DROP TABLE IF EXISTS",db_schema,".route_stops_tsp;")
sql
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
sql
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
sql <- paste("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ", db_schema, ".route_stops_tsp ", "FROM pgr_tsp(SELECT dmatrix from pgr_makecostmatrix(' ", db_schema, ".", db_tbl_stops, " ', ' ", db_schema, ".", db_tbl_streets, " ', ' ", db_col_cost, " '))::float8[],", start_id,") a LEFT JOIN ", db_schema, ".", db_tbl_stops, "b ON (a.id+1 = b.id);")
sql
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ", db_schema, ".route_stops_tsp ", "FROM pgr_tsp(SELECT dmatrix from pgr_makecostmatrix(' ", db_schema, ".", db_tbl_stops, " ', ' ", db_schema, ".", db_tbl_streets, " ', ' ", db_col_cost, " '))::float8[],", start_id,") a LEFT JOIN ", db_schema, ".", db_tbl_stops, "b ON (a.id+1 = b.id);")
sql
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp(SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
post <- dbGetQuery(con, statement = sql)
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
post <- dbGetQuery(con, statement = sql)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-1
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id-1,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-6
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id-1,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-6
stop_id<-4
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id-1,,stop_id-1,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id-1,stop_id-1,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-6
stop_id<-4
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id-1,stop_id-1,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-6
stop_id<-4
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,stop_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-6
stop_id<-4
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
start_id<-start_id-1
stop_id<-stop_id-1
start_id
stop_id
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,stop_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-6
stop_id<-4
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
start_id<-start_id-1
stop_id<-stop_id-1
start_id
stop_id
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,",",stop_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-4
stop_id<-10
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
start_id<-start_id-1
stop_id<-stop_id-1
start_id
stop_id
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,",",stop_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
sql
post <- dbGetQuery(con, statement = sql)
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-4
stop_id<-10
loop<-TRUE
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
#adjust start and stop values to use id-1 for routing
start_id<-start_id-1
stop_id<-stop_id-1
#option1: order stops in a loop only using start_id
if (loop)
{
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
post <- dbGetQuery(con, statement = sql)
}
#option2: order stops between start and stop id
else
{
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,",",stop_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
post <- dbGetQuery(con, statement = sql)
}
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
##SENSUM=group
db_host<-"localhost"
db_user<-"postgres"
db_pw<-"postgres"
db_name<-"sensum_demo"
db_schema<-"routing"
db_tbl_stops<-"route_stops"
db_tbl_streets<-"cologne_streets"
db_col_cost<-"length"
start_id<-4
stop_id<-10
loop<-TRUE
library(RPostgreSQL)
#connect to database
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, host=db_host, user=db_user, password=db_pw, dbname=db_name)
#create route stops from sampling points
sql <- paste0("DROP TABLE IF EXISTS ",db_schema,".route_stops_tsp;")
post <- dbGetQuery(con, statement = sql)
#adjust start and stop values to use id-1 for routing
start_id<-start_id-1
stop_id<-stop_id-1
if (loop)
{
#option1: order stops in a loop only using start_id
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
post <- dbGetQuery(con, statement = sql)
} else
{
#option2: order stops between start and stop id
sql <- paste0("SELECT seq, a.id+1 as id, b.node as id2, b.the_geom INTO ",db_schema,".route_stops_tsp ","FROM pgr_tsp((SELECT dmatrix from pgr_makecostmatrix('",db_schema,".",db_tbl_stops,"','",db_schema,".",db_tbl_streets,"','",db_col_cost,"'))::float8[],",start_id,",",stop_id,") a LEFT JOIN ",db_schema,".",db_tbl_stops," b ON (a.id+1 = b.id);")
post <- dbGetQuery(con, statement = sql)
}
#disconnect from database and unload driver
dbDisconnect(con)
dbUnloadDriver(drv)
